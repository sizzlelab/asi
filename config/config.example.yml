default: &default_settings
  
  # Enter here the domain where ASI is running
  server_domain: "http://localhost:3000"
  
  # You can use Hoptoad to track errors if you want.
  # You need to register an account and get an API key from hoptoadapp.com 
  use_hoptoad: false
  hoptoad_api_key: 'your_own_api_key_here'  
  
  # Ressi is Researcher's Interface for logged data
  # If you don't need it just leave it to false
  # If log_to_ressi is false, other ressi settings can be ignored.
  log_to_ressi: false
  ressi_url: "http://localhost:9000"
  
  coreui_app_name: "coreui"
  coreui_app_password: secret
  
  # CAS is a centralized authentication system, it is completely optional
  # If not needed leave empty
  cas_base_url: ""
  cas_validate_url: ""

  mestadb_host: '127.0.0.1'
  mestadb_port: 8000

  source_installation: "example_installation_code"
  asi_mail_from_address: "asi@example.com"
  error_mailer_recipients: 'admins@example.com'
  error_mailer_from_address: 'Error Mailer <ASIErrors@example.com>'
  error_mailer_ignore_routing: false
  
  crypto_helper_key: "insert_random_generated_key_here4234+naosetuaoeu=23=324//a3245bHEHUoeuh.rcdyfR+ahbe"

  # Session expiration time. How long should a session be valid after creation.
  # In practice this sets the maximum session validity for services using ASI.
  # The number means weeks. (Default 2 weeks)
  session_validity_time: 2

production:
  <<: *default_settings

development:
  <<: *default_settings
  
test:
  <<: *default_settings
  
  pysmsd_test_enabled: false
  pysmsd_test_app_name: "pysmsd_name"
  pysmsd_test_app_password: "pysmsd_secret"
  pysmsd_test_host: '0.0.0.0'
  pysmsd_test_port: 443
  pysmsd_test_use_ssl: true
  pysmsd_test_number: '+358123456789'
  pysmsd_test_use_proxy: false
  pysmsd_test_proxy_host: nil
  pysmsd_test_proxy_port: 0
  pysmsd_test_proxy_username: nil
  pysmsd_test_proxy_password: nil

